{"ast":null,"code":"import _slicedToArray from \"C:/Users/pradeep/OneDrive/Documents/htdocs/awake-mern/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport default function useToken() {\n  _s();\n\n  var getToken = function getToken() {\n    var tokenString = sessionStorage.getItem('token');\n    var userToken = tokenString ? JSON.parse(tokenString) : '';\n    return userToken ? userToken === null || userToken === void 0 ? void 0 : userToken.token : '';\n  };\n\n  var _useState = useState(getToken()),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var saveToken = function saveToken(userToken) {\n    if (userToken) {\n      sessionStorage.setItem('token', JSON.stringify(userToken));\n      setToken(userToken.token);\n    }\n  };\n\n  return {\n    setToken: saveToken,\n    token: token\n  };\n}\n\n_s(useToken, \"YxmPjHzwYO/ewBTUGNAd/YBNtug=\");","map":{"version":3,"sources":["C:/Users/pradeep/OneDrive/Documents/htdocs/awake-mern/frontend/src/useToken.js"],"names":["useState","useToken","getToken","tokenString","sessionStorage","getItem","userToken","JSON","parse","token","setToken","saveToken","setItem","stringify"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAMC,WAAW,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAApB;AACA,QAAMC,SAAS,GAAGH,WAAW,GAAGI,IAAI,CAACC,KAAL,CAAWL,WAAX,CAAH,GAA6B,EAA1D;AACA,WAAOG,SAAS,GAAGA,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEG,KAAd,GAAsB,EAAtC;AACD,GAJD;;AAKA,kBAA0BT,QAAQ,CAACE,QAAQ,EAAT,CAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAL,SAAS,EAAI;AAC3B,QAAGA,SAAH,EAAa;AACXF,MAAAA,cAAc,CAACQ,OAAf,CAAuB,OAAvB,EAAgCL,IAAI,CAACM,SAAL,CAAeP,SAAf,CAAhC;AACAI,MAAAA,QAAQ,CAACJ,SAAS,CAACG,KAAX,CAAR;AACD;AACJ,GALD;;AAOA,SAAO;AACLC,IAAAA,QAAQ,EAAEC,SADL;AAELF,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID;;GAnBuBR,Q","sourcesContent":["import { useState } from 'react';\r\n\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = sessionStorage.getItem('token');\r\n    const userToken = tokenString ? JSON.parse(tokenString) : '';\r\n    return userToken ? userToken?.token : ''\r\n  };\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = userToken => {\r\n      if(userToken){\r\n        sessionStorage.setItem('token', JSON.stringify(userToken));\r\n        setToken(userToken.token);\r\n      }\r\n  };\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}