{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/pradeep/OneDrive/Documents/htdocs/awake-mern/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/pradeep/OneDrive/Documents/htdocs/awake-mern/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/pradeep/OneDrive/Documents/htdocs/awake-mern/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/pradeep/OneDrive/Documents/htdocs/awake-mern/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/pradeep/OneDrive/Documents/htdocs/awake-mern/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\pradeep\\\\OneDrive\\\\Documents\\\\htdocs\\\\awake-mern\\\\frontend\\\\src\\\\components\\\\Word\\\\AddWord.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\pradeep\\\\OneDrive\\\\Documents\\\\htdocs\\\\awake-mern\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Button, Checkbox, Form, Message } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nvar AddWord = /*#__PURE__*/function (_Component) {\n  _inherits(AddWord, _Component);\n\n  var _super = _createSuper(AddWord);\n\n  function AddWord(props) {\n    var _this;\n\n    _classCallCheck(this, AddWord);\n\n    _this = _super.call(this, props);\n\n    _this.checkData = function () {\n      var word = document.getElementById('new_word').value;\n\n      _this.setState({\n        duplicateWordError: false,\n        error: false\n      });\n\n      if (!word || word.length < 3 || word > 50) {\n        _this.setState({\n          error: true\n        });\n\n        return false;\n      }\n\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                _this.props.syncWords();\n\n                _this.state.words.forEach(function (element) {\n                  if (element.wordName && element.wordName.toUpperCase() === word.toUpperCase()) {\n                    console.log('matched word %s', word);\n\n                    _this.setState({\n                      duplicateWordError: true\n                    });\n\n                    return false;\n                  }\n                });\n\n                _context.next = 9;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0.response && _context.t0.response.status === 404 ? 'Keyword not found.' : _context.t0);\n                return _context.abrupt(\"return\", false);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 5]]);\n      })), 500);\n    };\n\n    _this.postData = function () {\n      var wordName = _this.state.wordName;\n\n      if (_this.state.duplicateWordError) {\n        alert('Duplicate Keyword');\n        return false;\n      } else if (wordName.length < 3 || wordName > 50) {\n        alert('Invalid Keyword');\n        return false;\n      } else if (!_this.state.checkbox) {\n        alert('Please accept Terms & Conditions first');\n        return false;\n      }\n\n      axios.post('/api/vocab/words/', {\n        wordName: wordName\n      }).then(function (response) {\n        _this.props.updateWords(response.data);\n\n        _this.setState({\n          wordName: '',\n          checkbox: false,\n          success: true\n        });\n\n        setTimeout(function () {\n          _this.setState({\n            success: false\n          });\n        }, 3000);\n      });\n    };\n\n    _this.state = {\n      wordName: '',\n      checkbox: false,\n      duplicateWordError: false,\n      error: true,\n      success: false,\n      words: {\n        words: _this.props && _this.props.words && _this.props.words.length ? _this.props.words : []\n      }\n    };\n    return _this;\n  }\n\n  _createClass(AddWord, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.words !== this.props.words) {\n        this.setState({\n          words: this.props && this.props.words && this.props.words.length ? this.props.words : []\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"create-form\",\n          onSubmit: this.postData,\n          error: this.state.duplicateWordError,\n          success: this.state.success,\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"New Word\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Start typing here...\",\n              value: this.state.wordName,\n              minLength: 3,\n              maxLength: 50,\n              name: \"new_word\",\n              id: \"new_word\",\n              onChange: function onChange(e) {\n                _this2.setState({\n                  duplicateWordError: false,\n                  wordName: e.target.value\n                });\n\n                _this2.checkData();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            error: true,\n            header: \"Error\",\n            content: \"Duplicate keyword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              label: \"I agree to the Terms and Conditions\",\n              checked: this.state.checkbox,\n              onChange: function onChange(e) {\n                return _this2.setState({\n                  checkbox: !_this2.state.checkbox\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: this.state.duplicateWordError || this.state.error,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            success: true,\n            icon: \"thumbs up\",\n            header: \"Nice job!\",\n            content: \"Keyword saved.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return AddWord;\n}(Component);\n\nexport { AddWord as default };","map":{"version":3,"sources":["C:/Users/pradeep/OneDrive/Documents/htdocs/awake-mern/frontend/src/components/Word/AddWord.js"],"names":["React","Component","Button","Checkbox","Form","Message","axios","defaults","xsrfHeaderName","xsrfCookieName","AddWord","props","checkData","word","document","getElementById","value","setState","duplicateWordError","error","length","setTimeout","syncWords","state","words","forEach","element","wordName","toUpperCase","console","log","response","status","postData","alert","checkbox","post","then","updateWords","data","success","prevProps","e","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Checkbox, Form, Message } from 'semantic-ui-react'\r\nimport axios from 'axios';\r\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\n\r\nexport default class AddWord extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            wordName: '', checkbox: false, \r\n            duplicateWordError: false, error: true,\r\n            success: false,\r\n            words: {words: this.props && this.props.words && \r\n            this.props.words.length ? this.props.words : []}\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.words !== this.props.words) {\r\n            this.setState({\r\n                words: this.props && this.props.words && this.props.words.length ? this.props.words : []\r\n            })\r\n        }\r\n    }\r\n\r\n    checkData = () => {\r\n        let word = document.getElementById('new_word').value;\r\n        this.setState({\r\n            duplicateWordError: false, error: false\r\n        })\r\n        if(! word || word.length < 3 || word > 50){\r\n            this.setState({\r\n                error: true\r\n            })\r\n            return false;\r\n        }\r\n\r\n        setTimeout(async () => {\r\n            try{\r\n                this.props.syncWords();\r\n                this.state.words.forEach(element => {\r\n                    if(element.wordName && (element.wordName.toUpperCase() === word.toUpperCase())){\r\n                        console.log('matched word %s', word);\r\n                        this.setState({\r\n                            duplicateWordError: true\r\n                        })\r\n                        return false;\r\n                    }\r\n                });\r\n            } catch (error){\r\n                console.log(error.response && error.response.status === 404 ? 'Keyword not found.' : error);\r\n                return false;\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    postData = () => {\r\n        let wordName = this.state.wordName;\r\n        if(this.state.duplicateWordError){\r\n            alert('Duplicate Keyword');\r\n            return false;\r\n        } else if(wordName.length < 3 || wordName > 50){\r\n            alert('Invalid Keyword');\r\n            return false;\r\n        } else if(!this.state.checkbox) {\r\n            alert('Please accept Terms & Conditions first');\r\n            return false;\r\n        } \r\n\r\n        \r\n        axios.post('/api/vocab/words/', {\r\n            wordName\r\n        }).then((response) => {\r\n            this.props.updateWords(response.data);\r\n            this.setState({\r\n                wordName: '', checkbox: false, success: true\r\n            });\r\n            setTimeout(() => {\r\n               this.setState({success: false});\r\n            }, 3000)\r\n        })\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <div>\r\n            <Form className=\"create-form\" onSubmit={this.postData}\r\n            error={this.state.duplicateWordError}\r\n            success={this.state.success}>\r\n                <Form.Field>\r\n                    <label>New Word</label>\r\n                    <input placeholder='Start typing here...' \r\n                    value={this.state.wordName} minLength={3} maxLength={50} \r\n                    name=\"new_word\" id=\"new_word\" \r\n                    onChange={    \r\n                        (e) => {\r\n                            this.setState({\r\n                                duplicateWordError: false, wordName: e.target.value\r\n                            });\r\n                            this.checkData();\r\n                        }\r\n                    } />\r\n                </Form.Field>\r\n\r\n                <Message error header='Error' content=\"Duplicate keyword\"/>\r\n                \r\n                <Form.Field>\r\n                    <Checkbox label='I agree to the Terms and Conditions'\r\n                    checked={this.state.checkbox} \r\n                    onChange={(e) => this.setState({checkbox: !this.state.checkbox})}/>\r\n                </Form.Field>\r\n                \r\n                <Button type='submit' \r\n                disabled={this.state.duplicateWordError || this.state.error}>Submit</Button>\r\n\r\n                <Message success icon='thumbs up' header='Nice job!' content='Keyword saved.'/>\r\n            </Form>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}