{"ast":null,"code":"import _toConsumableArray from \"C:/Users/pradeep/OneDrive/Documents/htdocs/awake-mern/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"C:/Users/pradeep/OneDrive/Documents/htdocs/awake-mern/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/pradeep/OneDrive/Documents/htdocs/awake-mern/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\pradeep\\\\OneDrive\\\\Documents\\\\htdocs\\\\awake-mern\\\\frontend\\\\src\\\\components\\\\Word\\\\Words.js\",\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\pradeep\\\\OneDrive\\\\Documents\\\\htdocs\\\\awake-mern\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ShowWords from './ShowWords';\nimport AddWord from './AddWord';\nimport './Words.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nfunction Words(props) {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      words = _useState2[0],\n      setWords = _useState2[1];\n\n  useEffect(function () {\n    console.log('mounting');\n    fetchWords();\n    return function () {\n      console.log('un-mounting');\n      setWords([]);\n    };\n  }, []);\n\n  function fetchWords() {\n    return _fetchWords.apply(this, arguments);\n  }\n\n  function _fetchWords() {\n    _fetchWords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('/api/vocab/words/');\n\n            case 3:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              setWords(data);\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n              return _context.abrupt(\"return\", false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n    return _fetchWords.apply(this, arguments);\n  }\n\n  function syncWords() {\n    fetchWords();\n  }\n\n  function updateWords(data) {\n    setWords([].concat(_toConsumableArray(words), [data]));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wordsPanel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showWordsDiv\",\n      children: /*#__PURE__*/_jsxDEV(ShowWords, {\n        words: words\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addWordDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-header\",\n        children: \"@Vocab Add-Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddWord, {\n        words: words,\n        updateWords: updateWords,\n        syncWords: syncWords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Words, \"QrHlQthZFfwcsWWYyDJIvsds8f8=\");\n\n_c = Words;\nexport default Words;\n\nvar _c;\n\n$RefreshReg$(_c, \"Words\");","map":{"version":3,"sources":["C:/Users/pradeep/OneDrive/Documents/htdocs/awake-mern/frontend/src/components/Word/Words.js"],"names":["React","useEffect","useState","axios","ShowWords","AddWord","defaults","xsrfHeaderName","xsrfCookieName","Words","props","words","setWords","console","log","fetchWords","get","data","syncWords","updateWords"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,aAAP;;AACAF,KAAK,CAACG,QAAN,CAAeC,cAAf,GAAgC,aAAhC;AACAJ,KAAK,CAACG,QAAN,CAAeE,cAAf,GAAgC,WAAhC;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAClB,kBAA0BR,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAC,IAAAA,UAAU;AACV,WAAO,YAAM;AACTF,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAF,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAHD;AAIH,GAPQ,EAON,EAPM,CAAT;;AAHkB,WAYHG,UAZG;AAAA;AAAA;;AAAA;AAAA,2EAYlB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAE6BZ,KAAK,CAACa,GAAN,CAAU,mBAAV,CAF7B;;AAAA;AAAA;AAEeC,cAAAA,IAFf,oBAEeA,IAFf;AAGQL,cAAAA,QAAQ,CAACK,IAAD,CAAR;AAHR;AAAA;;AAAA;AAAA;AAAA;AAKQJ,cAAAA,OAAO,CAACC,GAAR;AALR,+CAMe,KANf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAZkB;AAAA;AAAA;;AAsBlB,WAASI,SAAT,GAAqB;AACjBH,IAAAA,UAAU;AACb;;AACD,WAASI,WAAT,CAAqBF,IAArB,EAA2B;AACvBL,IAAAA,QAAQ,8BAAKD,KAAL,IAAYM,IAAZ,GAAR;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEN;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEA,KAAhB;AAAuB,QAAA,WAAW,EAAEQ,WAApC;AACI,QAAA,SAAS,EAAED;AADf;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA1CQT,K;;KAAAA,K;AA4CT,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport ShowWords from './ShowWords'\r\nimport AddWord from './AddWord';\r\nimport './Words.css';\r\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\n\r\nfunction Words(props) {\r\n    const [words, setWords] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log('mounting');\r\n        fetchWords();\r\n        return () => {\r\n            console.log('un-mounting');\r\n            setWords([]);\r\n        }\r\n    }, []);\r\n\r\n    async function fetchWords() {\r\n        try{\r\n            const {data} = await axios.get('/api/vocab/words/');\r\n            setWords(data);\r\n        } catch (error){\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function syncWords() {\r\n        fetchWords();\r\n    }\r\n    function updateWords(data) {\r\n        setWords([...words, data]);\r\n    }\r\n\r\n    return (\r\n        <div className='wordsPanel'>\r\n            <div className='showWordsDiv'>\r\n                <ShowWords words={words}/>   \r\n            </div>\r\n            <div className='addWordDiv'>\r\n                <h2 className=\"main-header\">@Vocab Add-Word</h2> \r\n                <AddWord words={words} updateWords={updateWords}\r\n                    syncWords={syncWords}\r\n                />           \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Words"]},"metadata":{},"sourceType":"module"}